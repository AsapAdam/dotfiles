[alias]
	# Add all unstaged (including untracked) files
	a = add --all

	# Shorthand for branch
	b = branch

	# Show verbose output about branches
	branches = branch -a

	# Clone a repository including all submodules
	c = clone --recursive

	# Commit all changes
	ca = !git add -A && git commit -av

	# Switch to a branch
	co = checkout

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	# View the SHA, description, and history graph of the latest 20 commits
	l = log --format='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --no-merges -n 20

	# Shorthand for push
	p = push

	# Pull in remote changes for the current repository and all its submodules
	pl = !"git pull; git submodule foreach git pull origin master"

	# Shorthand for remote
	r = remote

	# Show verbose output about remotes
	remotes = remote -v

	# View the current working tree status using the short format
	s = status -s

	# List contributors with number of commits
	stats = shortlog -sn

	# Show verbose output about tags
	tags = tag -l

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[color]
	# Use colors in Git commands that are capable of colored output when outputting to the terminal
	ui = auto

[color "branch"]
	# Highlight current. Yellow local branches; Green remotes.
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	# Yellow meta; Magenta line info; Red for deleltions; Green for additions.
	frag = magenta
	meta = yellow
	new = green
	old = red

[color "status"]
	# Changed files are yellow. Staged files are green. New (untracked) files are cyan.
	# Headers are gray (white dimmed). Branch is always green even in headers
	added = green
	branch = green
	changed = yellow
	header = white dim
	untracked = cyan

[core]
	# Global `.gitattributes`
	attributesfile = ~/.gitattributes

	# Default editor for commit messages and other inputs
	# Even when EDITOR is set to something else
	editor = vim

	# Global `.gitignore`
	excludesfile = ~/.gitignore

	# Make `git rebase` safer on OS X
	trustctime = false

	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

[diff]
	# Use more time to create better diffs
	algorithm = patience

	# Diff will detect both renames and copies
	renames = copies

[help]
	# Automatically correct and execute mistyped commands
	autocorrect = 1

[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true

[push]
	# Git 2.0 from 'matching' to 'simple'
	default = simple

[url "git@github.com:"]
	# gh: is a shorthand for git@github.com
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
	# github: is a shorthand for git://github.com/
	insteadOf = "github:"

[url "git@gist.github.com:"]
	# gst: is a shorthand for git://gist.github.com/
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
	# gist: is a shofthand for git://gist.github.com/
	insteadOf = "gist:"

